// <auto-generated />
using ClothingWebsite.Server.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClothingWebsite.Server.Migrations
{
    [DbContext(typeof(QuanAoContext))]
    [Migration("20250224125947_inital")]
    partial class inital
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClothingWebsite.Server.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<int>("UserPower")
                        .HasColumnType("int")
                        .HasColumnName("user_power");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("username");

                    b.HasKey("AccountId")
                        .HasName("PK__Account__46A222CDB5ED18D8");

                    b.HasIndex(new[] { "Username" }, "UQ__Account__F3DBC5729A2E0E73")
                        .IsUnique();

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("ClothingWebsite.Server.Models.CustomerProduct", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customer_id");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("CustomerId", "ProductId")
                        .HasName("PK__Customer__8915EC5AEBEDB9CB");

                    b.HasIndex("ProductId");

                    b.ToTable("Customer_Product", (string)null);
                });

            modelBuilder.Entity("ClothingWebsite.Server.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<int>("ColorId")
                        .HasColumnType("int")
                        .HasColumnName("color_id");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("type_id");

                    b.HasKey("ProductId")
                        .HasName("PK__Product__47027DF5C3785C2E");

                    b.HasIndex("ColorId");

                    b.HasIndex("TypeId");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("ClothingWebsite.Server.Models.ProductColor", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("color_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColorId"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("color");

                    b.HasKey("ColorId")
                        .HasName("PK__Product___1143CECB0643E4DA");

                    b.HasIndex(new[] { "Color" }, "UQ__Product___900DC6E9F1FAD0A5")
                        .IsUnique();

                    b.ToTable("Product_Color", (string)null);
                });

            modelBuilder.Entity("ClothingWebsite.Server.Models.ProductType", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("type_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeId"));

                    b.Property<string>("ProductType1")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("product_type");

                    b.HasKey("TypeId")
                        .HasName("PK__Product___2C000598F70CF72F");

                    b.HasIndex(new[] { "ProductType1" }, "UQ__Product___D1B20C68BE5AC269")
                        .IsUnique();

                    b.ToTable("Product_Type", (string)null);
                });

            modelBuilder.Entity("ClothingWebsite.Server.Models.CustomerProduct", b =>
                {
                    b.HasOne("ClothingWebsite.Server.Models.Account", "Customer")
                        .WithMany("CustomerProducts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Customer___custo__5165187F");

                    b.HasOne("ClothingWebsite.Server.Models.Product", "Product")
                        .WithMany("CustomerProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Customer___produ__52593CB8");

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ClothingWebsite.Server.Models.Product", b =>
                {
                    b.HasOne("ClothingWebsite.Server.Models.ProductColor", "Color")
                        .WithMany("Products")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Product__color_i__4D94879B");

                    b.HasOne("ClothingWebsite.Server.Models.ProductType", "Type")
                        .WithMany("Products")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Product__type_id__4CA06362");

                    b.Navigation("Color");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("ClothingWebsite.Server.Models.Account", b =>
                {
                    b.Navigation("CustomerProducts");
                });

            modelBuilder.Entity("ClothingWebsite.Server.Models.Product", b =>
                {
                    b.Navigation("CustomerProducts");
                });

            modelBuilder.Entity("ClothingWebsite.Server.Models.ProductColor", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ClothingWebsite.Server.Models.ProductType", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
